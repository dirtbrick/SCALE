[gd_scene load_steps=6 format=2]

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float cutoff: hint_range(0.0,1.0);
uniform float wave_size : hint_range(0.0, 1.0) = 0.1;
uniform float wave_frequency : hint_range(0.0,1.0) = 0.04;
uniform float wave_speed : hint_range(0.0, 30.0) = 1.0;
uniform float wave_foam_size : hint_range(0,0.1) = 0.1;
uniform vec4 foam_color : hint_color;


void fragment(){
	float value = (1.0 - SCREEN_UV.y) * (1.0 - wave_size - wave_foam_size);
	float alpha = 1.0;
	vec3 color = COLOR.rgb + vec3(0.0, value, 0.0) / 5.0;
	
	float wave_cutoff_percent = (sin(SCREEN_UV.x / wave_frequency + TIME * wave_speed) + 1.0) / 2.0;
	float wave_cutoff_value = cutoff - wave_cutoff_percent * wave_size;
	
	if (value < wave_cutoff_value){
		if (value > wave_cutoff_value - wave_foam_size){
			color = foam_color.rgb;
		} else {
			alpha = 0.0;
		}
	}
	
	COLOR = vec4(color,alpha);
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/cutoff = 0.0
shader_param/wave_size = 0.05
shader_param/wave_frequency = 0.078
shader_param/wave_speed = 15.0
shader_param/wave_foam_size = 0.031
shader_param/foam_color = Color( 0.803922, 0.952941, 1, 1 )

[sub_resource type="GDScript" id=1]
script/source = "extends Control


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _enter_tree():
	$AnimationPlayer.play_backwards(\"Wave\")
	yield($AnimationPlayer, 'animation_finished')
	SceneTransition.emit_signal(\"anim_finished\")
func play():
	$AnimationPlayer.play(\"Wave\")
	yield($AnimationPlayer, 'animation_finished')
	SceneTransition.emit_signal(\"anim_finished\")
"

[sub_resource type="Animation" id=2]
resource_name = "RESET"
length = 0.01
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/cutoff")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=3]
resource_name = "Wave"
length = 0.7
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/cutoff")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1.86607, 1.86607 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[node name="Wave" type="ColorRect"]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.243137, 0.756863, 0.972549, 1 )
script = SubResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 2 )
anims/Wave = SubResource( 3 )
